apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-private-registry-deployment  
  labels:
    app: docker-private-registry
spec:  
  replicas: 1
  selector:
    matchLabels:
      app: docker-private-registry
  template:
    metadata:
      labels:
        app: docker-private-registry
    spec:
      containers:
      - name: docker-private-registry
        image: registry:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: "Registry Realm"
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: "/auth/.htpasswd"
        - name: REGISTRY_AUTH
          value: "htpasswd"
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
        volumeMounts:
        - mountPath: "/var/lib/registry"
          name: nfsvol4
        - mountPath: "/auth"
          name: nfsvol3
        ports:
        - containerPort: 5000
          protocol: TCP    
      volumes:
      - name: nfsvol3
        persistentVolumeClaim:
          claimName: nfs-pvc3
      - name: nfsvol4
        persistentVolumeClaim:
          claimName: nfs-pvc4 
          
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: docker-private-registry
  name: docker-private-registry
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: docker-private-registry
